service: TEMPLATE

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters
  - serverless-wsgi

custom:
  stackName: ${self:service}-${self:provider.stage}
  wsgi:
    app: inixy.app.app  # flask WSGI handler
    packRequirements: false
  pythonRequirements:
    dockerizePip: false
    slim: true
    useDownloadCache: true
    useStaticCache: true
    noDeploy:
      - psycopg2
      - boto3
      - botocore
      - docutils

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: eu-central-1

  iamRoleStatements:
    - Effect: Allow
      Action: secretsmanager:GetSecretValue
      Resource:
        - "arn:aws:secretsmanager:#{AWS::Region}:#{AWS::AccountId}:secret:TEMPLATE/${self:provider.stage}*"

package:
  exclude:
    - node_modules/**
    - venv/**
    - '**/__pycache__/**'
    - ".#*"

functions:
  app:  # main flask entry point
    handler: wsgi.handler  # using WSGI (serverless-wsgi plugin)
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'  # lambda proxy - capture all http requests and do routing in flask
    memorySize: 512
    layers:
      - arn:aws:lambda:eu-central-1:898466741470:layer:psycopg2:1  # psycopg is needed for sqlalchemy
