service: TEMPLATE

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters
  - serverless-wsgi

custom:
  stackName: ${self:service}-${self:provider.stage}
  db:
    dbname: "TEMPLATE_db"
    instance_name: "#{AWS::StackName}db"
    instance_class: db.t3.small
    storage: 10  # GB
  layers:
    psycopg: "arn:aws:lambda:#{AWS::Region}:898466741470:layer:psycopg2-py37:3"

  # plugins:
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: false
    slim: true
    useDownloadCache: true
    useStaticCache: true
    noDeploy:
      - psycopg2  # provided by layer
      - boto3
      - botocore
      - docutils

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: eu-central-1

  # x-ray
  tracing:
    lambda: true

  environment:
    STAGE: ${self:provider.stage}
    FLASK_APP: app.py
    XRAY: true
    DATABASE_URL:
      "Fn::Join": ['', ['postgresql://', {"Fn::Join": ['', ['{{resolve:secretsmanager:', !Ref RDSInstanceSecret, ':SecretString:username}}']]}, ':', {"Fn::Join": ['', ['{{resolve:secretsmanager:', !Ref RDSInstanceSecret, ':SecretString:password}}']]}, '@',{ "Fn::Join": [":", ["Fn::GetAtt": [DBCluster, Endpoint.Address], "Fn::GetAtt": [DBCluster, Endpoint.Port]]] }, "/${self:custom.db.dbname}"]]

  iamRoleStatements:
    - Effect: Allow
      Action: secretsmanager:GetSecretValue
      Resource:
        - "arn:aws:secretsmanager:#{AWS::Region}:#{AWS::AccountId}:secret:TEMPLATE/${self:provider.stage}*"

package:
  exclude:
    - node_modules/**
    - venv/**
    - instance.cfg
    - instance/**
    - '**/__pycache__/**'
    - ".#*"

functions:
  app:  # main flask entry point
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
    memorySize: 512
    layers:
      - ${self:custom.layers.psycopg}
    vpc:
      securityGroupIds:
        - "Fn::GetAtt": ServerlessSecurityGroup.GroupId
      subnetIds:
        - Ref: ServerlessSubnetA
        - Ref: ServerlessSubnetB
        - Ref: ServerlessSubnetC

resources:
  - ${file(cloudformation/vpc.yml)}
  - ${file(cloudformation/database.yml)}
