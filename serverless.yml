service: TEMPLATE

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters
  - serverless-wsgi
  - serverless-scriptable-plugin

custom:
  stackName: ${self:service}-${self:provider.stage}
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: false
    slim: true
    useDownloadCache: true
    useStaticCache: true
    noDeploy:
      - psycopg2  # provided by layer
      - boto3
      - botocore
      - docutils
  scriptHooks:
    after:deploy:finalize: git checkout ${self:provider.stage} || git checkout -b ${self:provider.stage} || git merge $(git rev-parse --abbrev-ref @{-1}) && git push origin ${self:provider.stage}

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage, 'dev'}
  region: eu-central-1

  environment:
    STAGE: ${self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action: secretsmanager:GetSecretValue
      Resource:
        - "arn:aws:secretsmanager:#{AWS::Region}:#{AWS::AccountId}:secret:TEMPLATE/${self:provider.stage}*"

package:
  exclude:
    - instance/**
    - node_modules/**
    - venv/**
    - '**/__pycache__/**'
    - ".#*"

functions:
  app:  # main flask entry point
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
    memorySize: 512
    layers:
      - arn:aws:lambda:eu-central-1:898466741470:layer:psycopg2-py37:2  # psycopg2
